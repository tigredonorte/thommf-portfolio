name: 'Ensure State Bucket Exists'
description: 'Creates Terraform state bucket if it does not exist'
inputs:
  state-bucket-name:
    description: 'S3 state bucket name'
    required: true
  aws-region:
    description: 'AWS region for state bucket'
    required: false
    default: 'us-east-1'
runs:
  using: 'composite'
  steps:
    - name: Ensure Terraform state bucket exists
      shell: bash
      run: |
        STATE_BUCKET="${{ inputs.state-bucket-name }}"
        REGION="${{ inputs.aws-region }}"
        
        if [ -z "$STATE_BUCKET" ]; then
          echo "‚ùå State bucket name not provided!"
          exit 1
        fi
        
        echo "üîç Checking if state bucket $STATE_BUCKET exists..."
        
        # Check if bucket exists
        if aws s3api head-bucket --bucket "$STATE_BUCKET" 2>/dev/null; then
          echo "‚úÖ State bucket already exists"
          exit 0
        fi
        
        echo "üì¶ Creating state bucket $STATE_BUCKET in region $REGION..."
        
        # Create bucket with appropriate configuration for the region
        if [ "$REGION" = "us-east-1" ]; then
          aws s3api create-bucket \
            --bucket "$STATE_BUCKET" \
            --region "$REGION"
        else
          aws s3api create-bucket \
            --bucket "$STATE_BUCKET" \
            --region "$REGION" \
            --create-bucket-configuration LocationConstraint="$REGION"
        fi
        
        # Enable versioning for state history
        echo "üìù Enabling versioning..."
        aws s3api put-bucket-versioning \
          --bucket "$STATE_BUCKET" \
          --versioning-configuration Status=Enabled
        
        # Enable encryption for security
        echo "üîí Enabling encryption..."
        aws s3api put-bucket-encryption \
          --bucket "$STATE_BUCKET" \
          --server-side-encryption-configuration '{
            "Rules": [{
              "ApplyServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }]
          }'
        
        # Block public access for security
        echo "üõ°Ô∏è Blocking public access..."
        aws s3api put-public-access-block \
          --bucket "$STATE_BUCKET" \
          --public-access-block-configuration \
            "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true"
        
        echo "‚úÖ State bucket created and configured successfully"